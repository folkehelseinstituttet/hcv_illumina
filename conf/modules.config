/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

//
// General configuration options
//

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'SAMTOOLS_COLLATE' {
        ext.prefix = { "${meta.id}.collate" } // Avoid name collision with input bam
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'SAMTOOLS_FIXMATE' {
        ext.args   = '-m'
        ext.prefix = { "${meta.id}.fixmate" } // Avoid name collision with input bam
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.sort" } // Avoid name collision with input bam
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUTADAPT' {
        ext.args = '-q 30 -m 50'
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            pattern: '*.log'
        ]
    }

    withName: 'KRAKEN2_KRAKEN2' {
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            pattern: '*report.txt'
        ]
    }

}

if (params.platform == 'nanopore' & params.agens == 'HBV') {
    includeConfig 'modules_hbv.config'
} else if (params.platform == 'illumina' & params.agens == 'ROV') {
    includeConfig 'modules_rov.config'
} else if (params.platform == 'illumina' & params.agens == 'HCV') {
    includeConfig 'modules_hcv.config'
}
