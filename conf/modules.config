/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: SPADES {
        publishDir = [
            path: { "${params.outdir}/spades" },
            pattern: '*fa.gz'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'CUTADAPT' {
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
            pattern: '*.log'
        ]
    }

    withName: 'KRAKEN2_KRAKEN2' {
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            pattern: '*report.txt'
        ]
    }

    withName: 'GLUEPARSE' {
        publishDir = [
            path: { "${params.outdir}/glueparse" },
            mode: params.publish_dir_mode,
            pattern: '*.tsv'
        ]
    }

//    withName: BOWTIE2_ALIGN {
//        tag = { "${meta.reference}|${meta.sample_id}_${meta.library_id}_L${meta.lane}" }
//        ext.args = {[ "-N ${params.mapping_bowtie2_n}",
//            "-L ${params.mapping_bowtie2_l}",
//            "--trim5 ${params.mapping_bowtie2_trim5}",
//            "--trim3 ${params.mapping_bowtie2_trim3}",
//            "--maxins ${params.mapping_bowtie2_maxins}",
//            "--rg-id ILLUMINA-${meta.library_id}",
//            "--rg SM:${meta.sample_id}",
//            "--rg PL:illumina",
//            "--rg PU:ILLUMINA-${meta.library_id}-${meta.strandedness}",
//            "${params.mapping_bowtie2_alignmode}" == 'local' ? "--local --${params.mapping_bowtie2_sensitivity}-local" : ( "${params.mapping_bowtie2_alignmode}" == 'end-to-end' ? "--end-to-end --${params.mapping_bowtie2_sensitivity}" : "" )
//        ].join(' ').trim()}
//        ext.prefix = { "${meta.sample_id}_${meta.library_id}_L${meta.lane}_${meta.reference}" }
//        publishDir = [
//            enabled: false
//        ]
//    }
// NEED TO ADD SENSITIVITY SETTINGS FOR BOWTIE
    // Don't publish any files from the first mapping
    withName: 'NIPH_VIRALSEQ:VIRALSEQ:BOWTIE2_ALIGN' {
        ext.args = "--very-sensitive-local"
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:TANOTI_ALIGN' {
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'SAMTOOLS_COLLATE' {
        ext.prefix = { "${meta.id}.collate" } // Avoid name collision with input bam
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'SAMTOOLS_FIXMATE' {
        ext.args   = '-m'
        ext.prefix = { "${meta.id}.fixmate" } // Avoid name collision with input bam
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.sort" } // Avoid name collision with input bam
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MAJOR_MAPPING:BAM_MARKDUPLICATES_SAMTOOLS:SAMTOOLS_MARKDUP' {
        ext.args   = '-r' // Remove duplicate reads
        ext.prefix = { "${meta.id}.${meta.reference}.nodup" }
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MINOR_MAPPING:BAM_MARKDUPLICATES_SAMTOOLS:SAMTOOLS_MARKDUP' {
        ext.args   = '-r' // Remove duplicate reads
        ext.prefix = { "${meta.id}.${meta.reference}.nodup" }
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:BAM_MARKDUPLICATES_SAMTOOLS:SAMTOOLS_MARKDUP' {
        ext.args   = '-r' // Remove duplicate reads
        //ext.prefix = { "${meta.id}.first_mapping.first_mapping" }
        //ext.extension = 'markdup.bam'
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'SAMTOOLS_INDEX' {
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:SAMTOOLS_IDXSTATS' {
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MAJOR_MAPPING:SAMTOOLS_IDXSTATS' {
        ext.prefix = { "${meta.id}.${meta.reference}.nodup" }
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MINOR_MAPPING:SAMTOOLS_IDXSTATS' {
        ext.prefix = { "${meta.id}.${meta.reference}.nodup" }
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:SAMTOOLS_DEPTH' {
        ext.args   = '-aa -d 1000000'
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MAJOR_MAPPING:SAMTOOLS_DEPTH' {
        ext.prefix = { "${meta1.id}.${meta1.reference}.nodup" }
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MINOR_MAPPING:SAMTOOLS_DEPTH' {
        ext.prefix = { "${meta1.id}.${meta1.reference}.nodup" }
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:SAMTOOLS_STATS' {
        ext.prefix = { "${meta.id}.nodup" }
        publishDir = [
            enabled: false // Don't publish any files from this process
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MAJOR_MAPPING:STATS_WITHDUP' {
        ext.prefix = { "${meta.id}.${meta.reference}.withdup" }
        publishDir = [
            path: { "${params.outdir}/samtools" }
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MINOR_MAPPING:STATS_WITHDUP' {
        ext.prefix = { "${meta.id}.${meta.reference}.withdup" }
        publishDir = [
            path: { "${params.outdir}/samtools" }
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MAJOR_MAPPING:STATS_MARKDUP' {
        ext.prefix = { "${meta.id}.${meta.reference}.nodup" }
        publishDir = [
            path: { "${params.outdir}/samtools" }
        ]
    }

    withName: 'NIPH_VIRALSEQ:VIRALSEQ:MINOR_MAPPING:STATS_MARKDUP' {
        ext.prefix = { "${meta.id}.${meta.reference}.nodup" }
        publishDir = [
            path: { "${params.outdir}/samtools" }
        ]
    }
}
